{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wBAAwB;AAC/B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0EAA0E,0BAA0B;AACpG,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,0BAA0B;AAC1B,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,EAAE,WAAW,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iEAAiE;AACzF,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc,yBAAyB;AACvC,cAAc,UAAU;AACxB,cAAc,gBAAgB;AAC9B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB,yBAAyB;AACzC,gBAAgB,gBAAgB;AAChC,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,mEAAmE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,2EAA2E,aAAa;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,8EAA8E,eAAe;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AAC4B;;;;;;;;;;;;;;;;CCvxH5B;;AACA;AACA;CAGA;;AACA,MAAMG,UAAU,GAAG,IAAIH,2DAAJ,EAAnB;AACA,MAAMI,UAAU,GAAG,IAAIH,2DAAJ,EAAnB;AACA,MAAMI,SAAS,GAAG,IAAIH,0DAAJ,EAAlB;;;;;;;;;;;ACVA,MAAMI,IAAN,CAAW;EACTC,WAAW,GAAG;IACZC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCC,OAAtC,CAA8CC,EAAE,IAAI;MAClD,KAAKC,OAAL,CAAaD,EAAb;IACD,CAFD;EAGD;;EAEDC,OAAO,CAACC,GAAD,EAAM;IACX,IAAIC,QAAQ,GAAGD,GAAG,CAACJ,gBAAJ,CAAqB,SAArB,CAAf;IAEA,IAAIM,IAAI,GAAG;MACTC,IAAI,EAAE,EADG;MAETC,MAAM,EAAE,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,CAFC;MAGTC,SAAS,EAAEH,MAAM,CAACC,IAAP,CAAYG,SAAZ,CAAsBC;IAHxB,CAAX;IAMA,IAAIC,GAAG,GAAG,IAAIN,MAAM,CAACC,IAAP,CAAYM,GAAhB,CAAoBZ,GAApB,EAAyBE,IAAzB,CAAV;IACAS,GAAG,CAACE,OAAJ,GAAc,EAAd;IACA,IAAIC,IAAI,GAAG,IAAX,CAXW,CAaX;;IACAb,QAAQ,CAACJ,OAAT,CAAiB,UAAUkB,CAAV,EAAa;MAC5BD,IAAI,CAACE,UAAL,CAAgBD,CAAhB,EAAmBJ,GAAnB;IACD,CAFD,EAdW,CAkBX;;IACA,KAAKM,UAAL,CAAgBN,GAAhB;EACD,CA3BQ,CA2BP;;;EAEFK,UAAU,CAACE,OAAD,EAAUP,GAAV,EAAe;IACvB,IAAIQ,MAAM,GAAG,IAAId,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuBW,OAAO,CAACE,YAAR,CAAqB,UAArB,CAAvB,EAAyDF,OAAO,CAACE,YAAR,CAAqB,UAArB,CAAzD,CAAb;IAEA,IAAIC,MAAM,GAAG,IAAIhB,MAAM,CAACC,IAAP,CAAYgB,MAAhB,CAAuB;MAClCC,QAAQ,EAAEJ,MADwB;MAElCR,GAAG,EAAEA;IAF6B,CAAvB,CAAb;IAKAA,GAAG,CAACE,OAAJ,CAAYW,IAAZ,CAAiBH,MAAjB,EARuB,CAUvB;;IACA,IAAIH,OAAO,CAACO,SAAZ,EAAuB;MACrB;MACA,IAAIC,UAAU,GAAG,IAAIrB,MAAM,CAACC,IAAP,CAAYqB,UAAhB,CAA2B;QAC1CC,OAAO,EAAEV,OAAO,CAACO;MADyB,CAA3B,CAAjB,CAFqB,CAMrB;;MACApB,MAAM,CAACC,IAAP,CAAYuB,KAAZ,CAAkBC,WAAlB,CAA8BT,MAA9B,EAAsC,OAAtC,EAA+C,YAAY;QACzDK,UAAU,CAACK,IAAX,CAAgBpB,GAAhB,EAAqBU,MAArB;MACD,CAFD;IAGD;EACF,CAnDQ,CAmDP;;;EAEFJ,UAAU,CAACN,GAAD,EAAM;IACd,IAAIqB,MAAM,GAAG,IAAI3B,MAAM,CAACC,IAAP,CAAY2B,YAAhB,EAAb,CADc,CAGd;;IACAtB,GAAG,CAACE,OAAJ,CAAYhB,OAAZ,CAAoB,UAAUwB,MAAV,EAAkB;MACpC,IAAIF,MAAM,GAAG,IAAId,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuBc,MAAM,CAACE,QAAP,CAAgBW,GAAhB,EAAvB,EAA8Cb,MAAM,CAACE,QAAP,CAAgBY,GAAhB,EAA9C,CAAb;MAEAH,MAAM,CAACI,MAAP,CAAcjB,MAAd;IACD,CAJD,EAJc,CAUd;;IACA,IAAIR,GAAG,CAACE,OAAJ,CAAYwB,MAAZ,IAAsB,CAA1B,EAA6B;MAC3B;MACA1B,GAAG,CAAC2B,SAAJ,CAAcN,MAAM,CAACO,SAAP,EAAd;MACA5B,GAAG,CAAC6B,OAAJ,CAAY,EAAZ;IACD,CAJD,MAIO;MACL;MACA7B,GAAG,CAAC8B,SAAJ,CAAcT,MAAd;IACD;EACF,CAxEQ,CAwEP;;;AAxEO;;AA2EX,+DAAevC,IAAf;;;;;;;;;;;;AC3EA;;AAEA,MAAML,UAAN,CAAiB;EACfM,WAAW,GAAG;IACZ,IAAIC,QAAQ,CAACgD,aAAT,CAAuB,cAAvB,CAAJ,EAA4C;MAC1C;MACA,MAAMC,QAAQ,GAAGjD,QAAQ,CAACC,gBAAT,CAA0B,qBAA1B,EAAiDyC,MAAlE,CAF0C,CAI1C;;MACA,IAAIQ,OAAO,GAAG,EAAd;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmC;QACjCD,OAAO,IAAK,iEAAgEC,CAAE,aAA9E;MACD,CARyC,CAU1C;;;MACAnD,QAAQ,CAACgD,aAAT,CAAuB,iBAAvB,EAA0CI,kBAA1C,CAA6D,WAA7D,EAA0EF,OAA1E,EAX0C,CAa1C;;MACA,IAAIG,KAAK,GAAG,IAAIN,sDAAJ,CAAU,cAAV,EAA0B;QACpCO,IAAI,EAAE,UAD8B;QAEpCC,OAAO,EAAE,CAF2B;QAGpCC,QAAQ,EAAE;MAH0B,CAA1B,CAAZ;MAMAH,KAAK,CAACI,KAAN;IACD;EACF;;AAxBc;;AA2BjB,+DAAehE,UAAf;;;;;;;;;;;AC7BA,MAAMD,UAAN,CAAiB;EACfO,WAAW,GAAG;IACZ,KAAK2D,IAAL,GAAY1D,QAAQ,CAACgD,aAAT,CAAuB,oBAAvB,CAAZ;IACA,KAAKW,UAAL,GAAkB3D,QAAQ,CAACgD,aAAT,CAAuB,4BAAvB,CAAlB;IACA,KAAKY,MAAL;EACD;;EAEDA,MAAM,GAAG;IACP,KAAKD,UAAL,CAAgBE,gBAAhB,CAAiC,OAAjC,EAA0C,MAAM,KAAKC,QAAL,EAAhD;EACD;;EAEDA,QAAQ,GAAG;IACT,KAAKH,UAAL,CAAgBI,SAAhB,CAA0BC,MAA1B,CAAiC,SAAjC;IACA,KAAKL,UAAL,CAAgBI,SAAhB,CAA0BC,MAA1B,CAAiC,iBAAjC;IACA,KAAKN,IAAL,CAAUK,SAAV,CAAoBC,MAApB,CAA2B,2BAA3B;EACD;;AAfc;;AAkBjB,+DAAexE,UAAf;;;;;;;;;;;AClBA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC,oHAAoH,iDAAiD;WACrK;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA,8CAA8C;;WAE9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,iCAAiC,mCAAmC;WACpE;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA,2FAA2F,+CAA+C;UAC1I","sources":["webpack://fictional-university-theme/./node_modules/@glidejs/glide/dist/glide.esm.js","webpack://fictional-university-theme/./src/index.js","webpack://fictional-university-theme/./src/modules/GoogleMap.js","webpack://fictional-university-theme/./src/modules/HeroSlider.js","webpack://fictional-university-theme/./src/modules/MobileMenu.js","webpack://fictional-university-theme/./css/style.scss","webpack://fictional-university-theme/webpack/bootstrap","webpack://fictional-university-theme/webpack/runtime/chunk loaded","webpack://fictional-university-theme/webpack/runtime/define property getters","webpack://fictional-university-theme/webpack/runtime/hasOwnProperty shorthand","webpack://fictional-university-theme/webpack/runtime/make namespace object","webpack://fictional-university-theme/webpack/runtime/jsonp chunk loading","webpack://fictional-university-theme/webpack/before-startup","webpack://fictional-university-theme/webpack/startup","webpack://fictional-university-theme/webpack/after-startup"],"sourcesContent":["/*!\r\n * Glide.js v3.5.2\r\n * (c) 2013-2021 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\r\n * Released under the MIT License.\r\n */\r\n\r\nfunction _typeof(obj) {\r\n  \"@babel/helpers - typeof\";\r\n\r\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\r\n    _typeof = function (obj) {\r\n      return typeof obj;\r\n    };\r\n  } else {\r\n    _typeof = function (obj) {\r\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    };\r\n  }\r\n\r\n  return _typeof(obj);\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n  for (var i = 0; i < props.length; i++) {\r\n    var descriptor = props[i];\r\n    descriptor.enumerable = descriptor.enumerable || false;\r\n    descriptor.configurable = true;\r\n    if (\"value\" in descriptor) descriptor.writable = true;\r\n    Object.defineProperty(target, descriptor.key, descriptor);\r\n  }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n  if (staticProps) _defineProperties(Constructor, staticProps);\r\n  return Constructor;\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n  if (typeof superClass !== \"function\" && superClass !== null) {\r\n    throw new TypeError(\"Super expression must either be null or a function\");\r\n  }\r\n\r\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n  if (superClass) _setPrototypeOf(subClass, superClass);\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\r\n    return o.__proto__ || Object.getPrototypeOf(o);\r\n  };\r\n  return _getPrototypeOf(o);\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\r\n    o.__proto__ = p;\r\n    return o;\r\n  };\r\n\r\n  return _setPrototypeOf(o, p);\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\r\n  if (Reflect.construct.sham) return false;\r\n  if (typeof Proxy === \"function\") return true;\r\n\r\n  try {\r\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction _assertThisInitialized(self) {\r\n  if (self === void 0) {\r\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n  }\r\n\r\n  return self;\r\n}\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\r\n    return call;\r\n  } else if (call !== void 0) {\r\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\r\n  }\r\n\r\n  return _assertThisInitialized(self);\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n\r\n  return function _createSuperInternal() {\r\n    var Super = _getPrototypeOf(Derived),\r\n        result;\r\n\r\n    if (hasNativeReflectConstruct) {\r\n      var NewTarget = _getPrototypeOf(this).constructor;\r\n\r\n      result = Reflect.construct(Super, arguments, NewTarget);\r\n    } else {\r\n      result = Super.apply(this, arguments);\r\n    }\r\n\r\n    return _possibleConstructorReturn(this, result);\r\n  };\r\n}\r\n\r\nfunction _superPropBase(object, property) {\r\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\r\n    object = _getPrototypeOf(object);\r\n    if (object === null) break;\r\n  }\r\n\r\n  return object;\r\n}\r\n\r\nfunction _get() {\r\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\r\n    _get = Reflect.get;\r\n  } else {\r\n    _get = function _get(target, property, receiver) {\r\n      var base = _superPropBase(target, property);\r\n\r\n      if (!base) return;\r\n      var desc = Object.getOwnPropertyDescriptor(base, property);\r\n\r\n      if (desc.get) {\r\n        return desc.get.call(arguments.length < 3 ? target : receiver);\r\n      }\r\n\r\n      return desc.value;\r\n    };\r\n  }\r\n\r\n  return _get.apply(this, arguments);\r\n}\r\n\r\nvar defaults = {\r\n  /**\r\n   * Type of the movement.\r\n   *\r\n   * Available types:\r\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\r\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\r\n   *\r\n   * @type {String}\r\n   */\r\n  type: 'slider',\r\n\r\n  /**\r\n   * Start at specific slide number defined with zero-based index.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  startAt: 0,\r\n\r\n  /**\r\n   * A number of slides visible on the single viewport.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  perView: 1,\r\n\r\n  /**\r\n   * Focus currently active slide at a specified position in the track.\r\n   *\r\n   * Available inputs:\r\n   * `center` - Current slide will be always focused at the center of a track.\r\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\r\n   *\r\n   * @type {String|Number}\r\n   */\r\n  focusAt: 0,\r\n\r\n  /**\r\n   * A size of the gap added between slides.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  gap: 10,\r\n\r\n  /**\r\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\r\n   *\r\n   * @type {Number|Boolean}\r\n   */\r\n  autoplay: false,\r\n\r\n  /**\r\n   * Stop autoplay on mouseover event.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  hoverpause: true,\r\n\r\n  /**\r\n   * Allow for changing slides with left and right keyboard arrows.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  keyboard: true,\r\n\r\n  /**\r\n   * Stop running `perView` number of slides from the end. Use this\r\n   * option if you don't want to have an empty space after\r\n   * a slider. Works only with `slider` type and a\r\n   * non-centered `focusAt` setting.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  bound: false,\r\n\r\n  /**\r\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\r\n   *\r\n   * @type {Number|Boolean}\r\n   */\r\n  swipeThreshold: 80,\r\n\r\n  /**\r\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\r\n   *\r\n   * @type {Number|Boolean}\r\n   */\r\n  dragThreshold: 120,\r\n\r\n  /**\r\n   * A number of slides moved on single swipe.\r\n   *\r\n   * Available types:\r\n   * `` - Moves slider by one slide per swipe\r\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\r\n   *\r\n   * @type {String}\r\n   */\r\n  perSwipe: '',\r\n\r\n  /**\r\n   * Moving distance ratio of the slides on a swiping and dragging.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  touchRatio: 0.5,\r\n\r\n  /**\r\n   * Angle required to activate slides moving on swiping or dragging.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  touchAngle: 45,\r\n\r\n  /**\r\n   * Duration of the animation in milliseconds.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  animationDuration: 400,\r\n\r\n  /**\r\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  rewind: true,\r\n\r\n  /**\r\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  rewindDuration: 800,\r\n\r\n  /**\r\n   * Easing function for the animation.\r\n   *\r\n   * @type {String}\r\n   */\r\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\r\n\r\n  /**\r\n   * Wait for the animation to finish until the next user input can be processed\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  waitForTransition: true,\r\n\r\n  /**\r\n   * Throttle costly events at most once per every wait milliseconds.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  throttle: 10,\r\n\r\n  /**\r\n   * Moving direction mode.\r\n   *\r\n   * Available inputs:\r\n   * - 'ltr' - left to right movement,\r\n   * - 'rtl' - right to left movement.\r\n   *\r\n   * @type {String}\r\n   */\r\n  direction: 'ltr',\r\n\r\n  /**\r\n   * The distance value of the next and previous viewports which\r\n   * have to peek in the current view. Accepts number and\r\n   * pixels as a string. Left and right peeking can be\r\n   * set up separately with a directions object.\r\n   *\r\n   * For example:\r\n   * `100` - Peek 100px on the both sides.\r\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\r\n   *\r\n   * @type {Number|String|Object}\r\n   */\r\n  peek: 0,\r\n\r\n  /**\r\n   * Defines how many clones of current viewport will be generated.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  cloningRatio: 1,\r\n\r\n  /**\r\n   * Collection of options applied at specified media breakpoints.\r\n   * For example: display two slides per view under 800px.\r\n   * `{\r\n   *   '800px': {\r\n   *     perView: 2\r\n   *   }\r\n   * }`\r\n   */\r\n  breakpoints: {},\r\n\r\n  /**\r\n   * Collection of internally used HTML classes.\r\n   *\r\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\r\n   * @type {Object}\r\n   */\r\n  classes: {\r\n    swipeable: 'glide--swipeable',\r\n    dragging: 'glide--dragging',\r\n    direction: {\r\n      ltr: 'glide--ltr',\r\n      rtl: 'glide--rtl'\r\n    },\r\n    type: {\r\n      slider: 'glide--slider',\r\n      carousel: 'glide--carousel'\r\n    },\r\n    slide: {\r\n      clone: 'glide__slide--clone',\r\n      active: 'glide__slide--active'\r\n    },\r\n    arrow: {\r\n      disabled: 'glide__arrow--disabled'\r\n    },\r\n    nav: {\r\n      active: 'glide__bullet--active'\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Outputs warning message to the bowser console.\r\n *\r\n * @param  {String} msg\r\n * @return {Void}\r\n */\r\nfunction warn(msg) {\r\n  console.error(\"[Glide warn]: \".concat(msg));\r\n}\r\n\r\n/**\r\n * Converts value entered as number\r\n * or string to integer value.\r\n *\r\n * @param {String} value\r\n * @returns {Number}\r\n */\r\nfunction toInt(value) {\r\n  return parseInt(value);\r\n}\r\n/**\r\n * Converts value entered as number\r\n * or string to flat value.\r\n *\r\n * @param {String} value\r\n * @returns {Number}\r\n */\r\n\r\nfunction toFloat(value) {\r\n  return parseFloat(value);\r\n}\r\n/**\r\n * Indicates whether the specified value is a string.\r\n *\r\n * @param  {*}   value\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isString(value) {\r\n  return typeof value === 'string';\r\n}\r\n/**\r\n * Indicates whether the specified value is an object.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n *\r\n * @see https://github.com/jashkenas/underscore\r\n */\r\n\r\nfunction isObject(value) {\r\n  var type = _typeof(value);\r\n\r\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\r\n}\r\n/**\r\n * Indicates whether the specified value is a function.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n/**\r\n * Indicates whether the specified value is undefined.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isUndefined(value) {\r\n  return typeof value === 'undefined';\r\n}\r\n/**\r\n * Indicates whether the specified value is an array.\r\n *\r\n * @param  {*} value\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isArray(value) {\r\n  return value.constructor === Array;\r\n}\r\n\r\n/**\r\n * Creates and initializes specified collection of extensions.\r\n * Each extension receives access to instance of glide and rest of components.\r\n *\r\n * @param {Object} glide\r\n * @param {Object} extensions\r\n *\r\n * @returns {Object}\r\n */\r\n\r\nfunction mount(glide, extensions, events) {\r\n  var components = {};\r\n\r\n  for (var name in extensions) {\r\n    if (isFunction(extensions[name])) {\r\n      components[name] = extensions[name](glide, components, events);\r\n    } else {\r\n      warn('Extension must be a function');\r\n    }\r\n  }\r\n\r\n  for (var _name in components) {\r\n    if (isFunction(components[_name].mount)) {\r\n      components[_name].mount();\r\n    }\r\n  }\r\n\r\n  return components;\r\n}\r\n\r\n/**\r\n * Defines getter and setter property on the specified object.\r\n *\r\n * @param  {Object} obj         Object where property has to be defined.\r\n * @param  {String} prop        Name of the defined property.\r\n * @param  {Object} definition  Get and set definitions for the property.\r\n * @return {Void}\r\n */\r\nfunction define(obj, prop, definition) {\r\n  Object.defineProperty(obj, prop, definition);\r\n}\r\n/**\r\n * Sorts aphabetically object keys.\r\n *\r\n * @param  {Object} obj\r\n * @return {Object}\r\n */\r\n\r\nfunction sortKeys(obj) {\r\n  return Object.keys(obj).sort().reduce(function (r, k) {\r\n    r[k] = obj[k];\r\n    return r[k], r;\r\n  }, {});\r\n}\r\n/**\r\n * Merges passed settings object with default options.\r\n *\r\n * @param  {Object} defaults\r\n * @param  {Object} settings\r\n * @return {Object}\r\n */\r\n\r\nfunction mergeOptions(defaults, settings) {\r\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\r\n  // have to do it manually for every nested object\r\n  // in options. Although it does not look smart,\r\n  // it's smaller and faster than some fancy\r\n  // merging deep-merge algorithm script.\r\n\r\n  if (settings.hasOwnProperty('classes')) {\r\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\r\n\r\n    if (settings.classes.hasOwnProperty('direction')) {\r\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction);\r\n    }\r\n\r\n    if (settings.classes.hasOwnProperty('type')) {\r\n      options.classes.type = Object.assign({}, defaults.classes.type, settings.classes.type);\r\n    }\r\n\r\n    if (settings.classes.hasOwnProperty('slide')) {\r\n      options.classes.slide = Object.assign({}, defaults.classes.slide, settings.classes.slide);\r\n    }\r\n\r\n    if (settings.classes.hasOwnProperty('arrow')) {\r\n      options.classes.arrow = Object.assign({}, defaults.classes.arrow, settings.classes.arrow);\r\n    }\r\n\r\n    if (settings.classes.hasOwnProperty('nav')) {\r\n      options.classes.nav = Object.assign({}, defaults.classes.nav, settings.classes.nav);\r\n    }\r\n  }\r\n\r\n  if (settings.hasOwnProperty('breakpoints')) {\r\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\r\n  }\r\n\r\n  return options;\r\n}\r\n\r\nvar EventsBus = /*#__PURE__*/function () {\r\n  /**\r\n   * Construct a EventBus instance.\r\n   *\r\n   * @param {Object} events\r\n   */\r\n  function EventsBus() {\r\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n    _classCallCheck(this, EventsBus);\r\n\r\n    this.events = events;\r\n    this.hop = events.hasOwnProperty;\r\n  }\r\n  /**\r\n   * Adds listener to the specifed event.\r\n   *\r\n   * @param {String|Array} event\r\n   * @param {Function} handler\r\n   */\r\n\r\n\r\n  _createClass(EventsBus, [{\r\n    key: \"on\",\r\n    value: function on(event, handler) {\r\n      if (isArray(event)) {\r\n        for (var i = 0; i < event.length; i++) {\r\n          this.on(event[i], handler);\r\n        }\r\n\r\n        return;\r\n      } // Create the event's object if not yet created\r\n\r\n\r\n      if (!this.hop.call(this.events, event)) {\r\n        this.events[event] = [];\r\n      } // Add the handler to queue\r\n\r\n\r\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\r\n\r\n      return {\r\n        remove: function remove() {\r\n          delete this.events[event][index];\r\n        }\r\n      };\r\n    }\r\n    /**\r\n     * Runs registered handlers for specified event.\r\n     *\r\n     * @param {String|Array} event\r\n     * @param {Object=} context\r\n     */\r\n\r\n  }, {\r\n    key: \"emit\",\r\n    value: function emit(event, context) {\r\n      if (isArray(event)) {\r\n        for (var i = 0; i < event.length; i++) {\r\n          this.emit(event[i], context);\r\n        }\r\n\r\n        return;\r\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\r\n\r\n\r\n      if (!this.hop.call(this.events, event)) {\r\n        return;\r\n      } // Cycle through events queue, fire!\r\n\r\n\r\n      this.events[event].forEach(function (item) {\r\n        item(context || {});\r\n      });\r\n    }\r\n  }]);\r\n\r\n  return EventsBus;\r\n}();\r\n\r\nvar Glide$1 = /*#__PURE__*/function () {\r\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\r\n  function Glide(selector) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n    _classCallCheck(this, Glide);\r\n\r\n    this._c = {};\r\n    this._t = [];\r\n    this._e = new EventsBus();\r\n    this.disabled = false;\r\n    this.selector = selector;\r\n    this.settings = mergeOptions(defaults, options);\r\n    this.index = this.settings.startAt;\r\n  }\r\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\r\n\r\n\r\n  _createClass(Glide, [{\r\n    key: \"mount\",\r\n    value: function mount$1() {\r\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n      this._e.emit('mount.before');\r\n\r\n      if (isObject(extensions)) {\r\n        this._c = mount(this, extensions, this._e);\r\n      } else {\r\n        warn('You need to provide a object on `mount()`');\r\n      }\r\n\r\n      this._e.emit('mount.after');\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\r\n\r\n  }, {\r\n    key: \"mutate\",\r\n    value: function mutate() {\r\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n      if (isArray(transformers)) {\r\n        this._t = transformers;\r\n      } else {\r\n        warn('You need to provide a array on `mutate()`');\r\n      }\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"update\",\r\n    value: function update() {\r\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n      this.settings = mergeOptions(this.settings, settings);\r\n\r\n      if (settings.hasOwnProperty('startAt')) {\r\n        this.index = settings.startAt;\r\n      }\r\n\r\n      this._e.emit('update');\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"go\",\r\n    value: function go(pattern) {\r\n      this._c.Run.make(pattern);\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"move\",\r\n    value: function move(distance) {\r\n      this._c.Transition.disable();\r\n\r\n      this._c.Move.make(distance);\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      this._e.emit('destroy');\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"play\",\r\n    value: function play() {\r\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n\r\n      if (interval) {\r\n        this.settings.autoplay = interval;\r\n      }\r\n\r\n      this._e.emit('play');\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"pause\",\r\n    value: function pause() {\r\n      this._e.emit('pause');\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"disable\",\r\n    value: function disable() {\r\n      this.disabled = true;\r\n      return this;\r\n    }\r\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"enable\",\r\n    value: function enable() {\r\n      this.disabled = false;\r\n      return this;\r\n    }\r\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\r\n\r\n  }, {\r\n    key: \"on\",\r\n    value: function on(event, handler) {\r\n      this._e.on(event, handler);\r\n\r\n      return this;\r\n    }\r\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"isType\",\r\n    value: function isType(name) {\r\n      return this.settings.type === name;\r\n    }\r\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\r\n\r\n  }, {\r\n    key: \"settings\",\r\n    get: function get() {\r\n      return this._o;\r\n    }\r\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\r\n    ,\r\n    set: function set(o) {\r\n      if (isObject(o)) {\r\n        this._o = o;\r\n      } else {\r\n        warn('Options must be an `object` instance.');\r\n      }\r\n    }\r\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\r\n\r\n  }, {\r\n    key: \"index\",\r\n    get: function get() {\r\n      return this._i;\r\n    }\r\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    ,\r\n    set: function set(i) {\r\n      this._i = toInt(i);\r\n    }\r\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\r\n\r\n  }, {\r\n    key: \"type\",\r\n    get: function get() {\r\n      return this.settings.type;\r\n    }\r\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"disabled\",\r\n    get: function get() {\r\n      return this._d;\r\n    }\r\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    ,\r\n    set: function set(status) {\r\n      this._d = !!status;\r\n    }\r\n  }]);\r\n\r\n  return Glide;\r\n}();\r\n\r\nfunction Run (Glide, Components, Events) {\r\n  var Run = {\r\n    /**\r\n     * Initializes autorunning of the glide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      this._o = false;\r\n    },\r\n\r\n    /**\r\n     * Makes glides running based on the passed moving schema.\r\n     *\r\n     * @param {String} move\r\n     */\r\n    make: function make(move) {\r\n      var _this = this;\r\n\r\n      if (!Glide.disabled) {\r\n        !Glide.settings.waitForTransition || Glide.disable();\r\n        this.move = move;\r\n        Events.emit('run.before', this.move);\r\n        this.calculate();\r\n        Events.emit('run', this.move);\r\n        Components.Transition.after(function () {\r\n          if (_this.isStart()) {\r\n            Events.emit('run.start', _this.move);\r\n          }\r\n\r\n          if (_this.isEnd()) {\r\n            Events.emit('run.end', _this.move);\r\n          }\r\n\r\n          if (_this.isOffset()) {\r\n            _this._o = false;\r\n            Events.emit('run.offset', _this.move);\r\n          }\r\n\r\n          Events.emit('run.after', _this.move);\r\n          Glide.enable();\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Calculates current index based on defined move.\r\n     *\r\n     * @return {Number|Undefined}\r\n     */\r\n    calculate: function calculate() {\r\n      var move = this.move,\r\n          length = this.length;\r\n      var steps = move.steps,\r\n          direction = move.direction; // By default assume that size of view is equal to one slide\r\n\r\n      var viewSize = 1; // While direction is `=` we want jump to\r\n      // a specified index described in steps.\r\n\r\n      if (direction === '=') {\r\n        // Check if bound is true, \r\n        // as we want to avoid whitespaces.\r\n        if (Glide.settings.bound && toInt(steps) > length) {\r\n          Glide.index = length;\r\n          return;\r\n        }\r\n\r\n        Glide.index = steps;\r\n        return;\r\n      } // When pattern is equal to `>>` we want\r\n      // fast forward to the last slide.\r\n\r\n\r\n      if (direction === '>' && steps === '>') {\r\n        Glide.index = length;\r\n        return;\r\n      } // When pattern is equal to `<<` we want\r\n      // fast forward to the first slide.\r\n\r\n\r\n      if (direction === '<' && steps === '<') {\r\n        Glide.index = 0;\r\n        return;\r\n      } // pagination movement\r\n\r\n\r\n      if (direction === '|') {\r\n        viewSize = Glide.settings.perView || 1;\r\n      } // we are moving forward\r\n\r\n\r\n      if (direction === '>' || direction === '|' && steps === '>') {\r\n        var index = calculateForwardIndex(viewSize);\r\n\r\n        if (index > length) {\r\n          this._o = true;\r\n        }\r\n\r\n        Glide.index = normalizeForwardIndex(index, viewSize);\r\n        return;\r\n      } // we are moving backward\r\n\r\n\r\n      if (direction === '<' || direction === '|' && steps === '<') {\r\n        var _index = calculateBackwardIndex(viewSize);\r\n\r\n        if (_index < 0) {\r\n          this._o = true;\r\n        }\r\n\r\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\r\n        return;\r\n      }\r\n\r\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\r\n    },\r\n\r\n    /**\r\n     * Checks if we are on the first slide.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isStart: function isStart() {\r\n      return Glide.index <= 0;\r\n    },\r\n\r\n    /**\r\n     * Checks if we are on the last slide.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isEnd: function isEnd() {\r\n      return Glide.index >= this.length;\r\n    },\r\n\r\n    /**\r\n     * Checks if we are making a offset run.\r\n     *\r\n     * @param {String} direction\r\n     * @return {Boolean}\r\n     */\r\n    isOffset: function isOffset() {\r\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\r\n\r\n      if (!direction) {\r\n        return this._o;\r\n      }\r\n\r\n      if (!this._o) {\r\n        return false;\r\n      } // did we view to the right?\r\n\r\n\r\n      if (direction === '|>') {\r\n        return this.move.direction === '|' && this.move.steps === '>';\r\n      } // did we view to the left?\r\n\r\n\r\n      if (direction === '|<') {\r\n        return this.move.direction === '|' && this.move.steps === '<';\r\n      }\r\n\r\n      return this.move.direction === direction;\r\n    },\r\n\r\n    /**\r\n     * Checks if bound mode is active\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isBound: function isBound() {\r\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\r\n    }\r\n  };\r\n  /**\r\n   * Returns index value to move forward/to the right\r\n   *\r\n   * @param viewSize\r\n   * @returns {Number}\r\n   */\r\n\r\n  function calculateForwardIndex(viewSize) {\r\n    var index = Glide.index;\r\n\r\n    if (Glide.isType('carousel')) {\r\n      return index + viewSize;\r\n    }\r\n\r\n    return index + (viewSize - index % viewSize);\r\n  }\r\n  /**\r\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\r\n   *\r\n   * @param index\r\n   * @param length\r\n   * @param viewSize\r\n   * @returns {Number}\r\n   */\r\n\r\n\r\n  function normalizeForwardIndex(index, viewSize) {\r\n    var length = Run.length;\r\n\r\n    if (index <= length) {\r\n      return index;\r\n    }\r\n\r\n    if (Glide.isType('carousel')) {\r\n      return index - (length + 1);\r\n    }\r\n\r\n    if (Glide.settings.rewind) {\r\n      // bound does funny things with the length, therefor we have to be certain\r\n      // that we are on the last possible index value given by bound\r\n      if (Run.isBound() && !Run.isEnd()) {\r\n        return length;\r\n      }\r\n\r\n      return 0;\r\n    }\r\n\r\n    if (Run.isBound()) {\r\n      return length;\r\n    }\r\n\r\n    return Math.floor(length / viewSize) * viewSize;\r\n  }\r\n  /**\r\n   * Calculates index value to move backward/to the left\r\n   *\r\n   * @param viewSize\r\n   * @returns {Number}\r\n   */\r\n\r\n\r\n  function calculateBackwardIndex(viewSize) {\r\n    var index = Glide.index;\r\n\r\n    if (Glide.isType('carousel')) {\r\n      return index - viewSize;\r\n    } // ensure our back navigation results in the same index as a forward navigation\r\n    // to experience a homogeneous paging\r\n\r\n\r\n    var view = Math.ceil(index / viewSize);\r\n    return (view - 1) * viewSize;\r\n  }\r\n  /**\r\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\r\n   *\r\n   * @param index\r\n   * @param length\r\n   * @param viewSize\r\n   * @returns {*}\r\n   */\r\n\r\n\r\n  function normalizeBackwardIndex(index, viewSize) {\r\n    var length = Run.length;\r\n\r\n    if (index >= 0) {\r\n      return index;\r\n    }\r\n\r\n    if (Glide.isType('carousel')) {\r\n      return index + (length + 1);\r\n    }\r\n\r\n    if (Glide.settings.rewind) {\r\n      // bound does funny things with the length, therefor we have to be certain\r\n      // that we are on first possible index value before we to rewind to the length given by bound\r\n      if (Run.isBound() && Run.isStart()) {\r\n        return length;\r\n      }\r\n\r\n      return Math.floor(length / viewSize) * viewSize;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  define(Run, 'move', {\r\n    /**\r\n     * Gets value of the move schema.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    get: function get() {\r\n      return this._m;\r\n    },\r\n\r\n    /**\r\n     * Sets value of the move schema.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    set: function set(value) {\r\n      var step = value.substr(1);\r\n      this._m = {\r\n        direction: value.substr(0, 1),\r\n        steps: step ? toInt(step) ? toInt(step) : step : 0\r\n      };\r\n    }\r\n  });\r\n  define(Run, 'length', {\r\n    /**\r\n     * Gets value of the running distance based\r\n     * on zero-indexing number of slides.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      var settings = Glide.settings;\r\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\r\n      // reduced by `perView` and `focusAt` settings. Running distance\r\n      // should end before creating an empty space after instance.\r\n\r\n      if (this.isBound()) {\r\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\r\n      }\r\n\r\n      return length - 1;\r\n    }\r\n  });\r\n  define(Run, 'offset', {\r\n    /**\r\n     * Gets status of the offsetting flag.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    get: function get() {\r\n      return this._o;\r\n    }\r\n  });\r\n  return Run;\r\n}\r\n\r\n/**\r\n * Returns a current time.\r\n *\r\n * @return {Number}\r\n */\r\nfunction now() {\r\n  return new Date().getTime();\r\n}\r\n\r\n/**\r\n * Returns a function, that, when invoked, will only be triggered\r\n * at most once during a given window of time.\r\n *\r\n * @param {Function} func\r\n * @param {Number} wait\r\n * @param {Object=} options\r\n * @return {Function}\r\n *\r\n * @see https://github.com/jashkenas/underscore\r\n */\r\n\r\nfunction throttle(func, wait, options) {\r\n  var timeout, context, args, result;\r\n  var previous = 0;\r\n  if (!options) options = {};\r\n\r\n  var later = function later() {\r\n    previous = options.leading === false ? 0 : now();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n    if (!timeout) context = args = null;\r\n  };\r\n\r\n  var throttled = function throttled() {\r\n    var at = now();\r\n    if (!previous && options.leading === false) previous = at;\r\n    var remaining = wait - (at - previous);\r\n    context = this;\r\n    args = arguments;\r\n\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n      }\r\n\r\n      previous = at;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  throttled.cancel = function () {\r\n    clearTimeout(timeout);\r\n    previous = 0;\r\n    timeout = context = args = null;\r\n  };\r\n\r\n  return throttled;\r\n}\r\n\r\nvar MARGIN_TYPE = {\r\n  ltr: ['marginLeft', 'marginRight'],\r\n  rtl: ['marginRight', 'marginLeft']\r\n};\r\nfunction Gaps (Glide, Components, Events) {\r\n  var Gaps = {\r\n    /**\r\n     * Applies gaps between slides. First and last\r\n     * slides do not receive it's edge margins.\r\n     *\r\n     * @param {HTMLCollection} slides\r\n     * @return {Void}\r\n     */\r\n    apply: function apply(slides) {\r\n      for (var i = 0, len = slides.length; i < len; i++) {\r\n        var style = slides[i].style;\r\n        var direction = Components.Direction.value;\r\n\r\n        if (i !== 0) {\r\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\r\n        } else {\r\n          style[MARGIN_TYPE[direction][0]] = '';\r\n        }\r\n\r\n        if (i !== slides.length - 1) {\r\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\r\n        } else {\r\n          style[MARGIN_TYPE[direction][1]] = '';\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes gaps from the slides.\r\n     *\r\n     * @param {HTMLCollection} slides\r\n     * @returns {Void}\r\n    */\r\n    remove: function remove(slides) {\r\n      for (var i = 0, len = slides.length; i < len; i++) {\r\n        var style = slides[i].style;\r\n        style.marginLeft = '';\r\n        style.marginRight = '';\r\n      }\r\n    }\r\n  };\r\n  define(Gaps, 'value', {\r\n    /**\r\n     * Gets value of the gap.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get: function get() {\r\n      return toInt(Glide.settings.gap);\r\n    }\r\n  });\r\n  define(Gaps, 'grow', {\r\n    /**\r\n     * Gets additional dimensions value caused by gaps.\r\n     * Used to increase width of the slides wrapper.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get: function get() {\r\n      return Gaps.value * Components.Sizes.length;\r\n    }\r\n  });\r\n  define(Gaps, 'reductor', {\r\n    /**\r\n     * Gets reduction value caused by gaps.\r\n     * Used to subtract width of the slides.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get: function get() {\r\n      var perView = Glide.settings.perView;\r\n      return Gaps.value * (perView - 1) / perView;\r\n    }\r\n  });\r\n  /**\r\n   * Apply calculated gaps:\r\n   * - after building, so slides (including clones) will receive proper margins\r\n   * - on updating via API, to recalculate gaps with new options\r\n   */\r\n\r\n  Events.on(['build.after', 'update'], throttle(function () {\r\n    Gaps.apply(Components.Html.wrapper.children);\r\n  }, 30));\r\n  /**\r\n   * Remove gaps:\r\n   * - on destroying to bring markup to its inital state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Gaps.remove(Components.Html.wrapper.children);\r\n  });\r\n  return Gaps;\r\n}\r\n\r\n/**\r\n * Finds siblings nodes of the passed node.\r\n *\r\n * @param  {Element} node\r\n * @return {Array}\r\n */\r\nfunction siblings(node) {\r\n  if (node && node.parentNode) {\r\n    var n = node.parentNode.firstChild;\r\n    var matched = [];\r\n\r\n    for (; n; n = n.nextSibling) {\r\n      if (n.nodeType === 1 && n !== node) {\r\n        matched.push(n);\r\n      }\r\n    }\r\n\r\n    return matched;\r\n  }\r\n\r\n  return [];\r\n}\r\n/**\r\n * Checks if passed node exist and is a valid element.\r\n *\r\n * @param  {Element} node\r\n * @return {Boolean}\r\n */\r\n\r\nfunction exist(node) {\r\n  if (node && node instanceof window.HTMLElement) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\r\nfunction Html (Glide, Components, Events) {\r\n  var Html = {\r\n    /**\r\n     * Setup slider HTML nodes.\r\n     *\r\n     * @param {Glide} glide\r\n     */\r\n    mount: function mount() {\r\n      this.root = Glide.selector;\r\n      this.track = this.root.querySelector(TRACK_SELECTOR);\r\n      this.collectSlides();\r\n    },\r\n\r\n    /**\r\n     * Collect slides\r\n     */\r\n    collectSlides: function collectSlides() {\r\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\r\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\r\n      });\r\n    }\r\n  };\r\n  define(Html, 'root', {\r\n    /**\r\n     * Gets node of the glide main element.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get: function get() {\r\n      return Html._r;\r\n    },\r\n\r\n    /**\r\n     * Sets node of the glide main element.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    set: function set(r) {\r\n      if (isString(r)) {\r\n        r = document.querySelector(r);\r\n      }\r\n\r\n      if (exist(r)) {\r\n        Html._r = r;\r\n      } else {\r\n        warn('Root element must be a existing Html node');\r\n      }\r\n    }\r\n  });\r\n  define(Html, 'track', {\r\n    /**\r\n     * Gets node of the glide track with slides.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get: function get() {\r\n      return Html._t;\r\n    },\r\n\r\n    /**\r\n     * Sets node of the glide track with slides.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    set: function set(t) {\r\n      if (exist(t)) {\r\n        Html._t = t;\r\n      } else {\r\n        warn(\"Could not find track element. Please use \".concat(TRACK_SELECTOR, \" attribute.\"));\r\n      }\r\n    }\r\n  });\r\n  define(Html, 'wrapper', {\r\n    /**\r\n     * Gets node of the slides wrapper.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get: function get() {\r\n      return Html.track.children[0];\r\n    }\r\n  });\r\n  /**\r\n   * Add/remove/reorder dynamic slides\r\n   */\r\n\r\n  Events.on('update', function () {\r\n    Html.collectSlides();\r\n  });\r\n  return Html;\r\n}\r\n\r\nfunction Peek (Glide, Components, Events) {\r\n  var Peek = {\r\n    /**\r\n     * Setups how much to peek based on settings.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      this.value = Glide.settings.peek;\r\n    }\r\n  };\r\n  define(Peek, 'value', {\r\n    /**\r\n     * Gets value of the peek.\r\n     *\r\n     * @returns {Number|Object}\r\n     */\r\n    get: function get() {\r\n      return Peek._v;\r\n    },\r\n\r\n    /**\r\n     * Sets value of the peek.\r\n     *\r\n     * @param {Number|Object} value\r\n     * @return {Void}\r\n     */\r\n    set: function set(value) {\r\n      if (isObject(value)) {\r\n        value.before = toInt(value.before);\r\n        value.after = toInt(value.after);\r\n      } else {\r\n        value = toInt(value);\r\n      }\r\n\r\n      Peek._v = value;\r\n    }\r\n  });\r\n  define(Peek, 'reductor', {\r\n    /**\r\n     * Gets reduction value caused by peek.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get: function get() {\r\n      var value = Peek.value;\r\n      var perView = Glide.settings.perView;\r\n\r\n      if (isObject(value)) {\r\n        return value.before / perView + value.after / perView;\r\n      }\r\n\r\n      return value * 2 / perView;\r\n    }\r\n  });\r\n  /**\r\n   * Recalculate peeking sizes on:\r\n   * - when resizing window to update to proper percents\r\n   */\r\n\r\n  Events.on(['resize', 'update'], function () {\r\n    Peek.mount();\r\n  });\r\n  return Peek;\r\n}\r\n\r\nfunction Move (Glide, Components, Events) {\r\n  var Move = {\r\n    /**\r\n     * Constructs move component.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    mount: function mount() {\r\n      this._o = 0;\r\n    },\r\n\r\n    /**\r\n     * Calculates a movement value based on passed offset and currently active index.\r\n     *\r\n     * @param  {Number} offset\r\n     * @return {Void}\r\n     */\r\n    make: function make() {\r\n      var _this = this;\r\n\r\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n      this.offset = offset;\r\n      Events.emit('move', {\r\n        movement: this.value\r\n      });\r\n      Components.Transition.after(function () {\r\n        Events.emit('move.after', {\r\n          movement: _this.value\r\n        });\r\n      });\r\n    }\r\n  };\r\n  define(Move, 'offset', {\r\n    /**\r\n     * Gets an offset value used to modify current translate.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    get: function get() {\r\n      return Move._o;\r\n    },\r\n\r\n    /**\r\n     * Sets an offset value used to modify current translate.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    set: function set(value) {\r\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\r\n    }\r\n  });\r\n  define(Move, 'translate', {\r\n    /**\r\n     * Gets a raw movement value.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      return Components.Sizes.slideWidth * Glide.index;\r\n    }\r\n  });\r\n  define(Move, 'value', {\r\n    /**\r\n     * Gets an actual movement value corrected by offset.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      var offset = this.offset;\r\n      var translate = this.translate;\r\n\r\n      if (Components.Direction.is('rtl')) {\r\n        return translate + offset;\r\n      }\r\n\r\n      return translate - offset;\r\n    }\r\n  });\r\n  /**\r\n   * Make movement to proper slide on:\r\n   * - before build, so glide will start at `startAt` index\r\n   * - on each standard run to move to newly calculated index\r\n   */\r\n\r\n  Events.on(['build.before', 'run'], function () {\r\n    Move.make();\r\n  });\r\n  return Move;\r\n}\r\n\r\nfunction Sizes (Glide, Components, Events) {\r\n  var Sizes = {\r\n    /**\r\n     * Setups dimensions of slides.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    setupSlides: function setupSlides() {\r\n      var width = \"\".concat(this.slideWidth, \"px\");\r\n      var slides = Components.Html.slides;\r\n\r\n      for (var i = 0; i < slides.length; i++) {\r\n        slides[i].style.width = width;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Setups dimensions of slides wrapper.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    setupWrapper: function setupWrapper() {\r\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\r\n    },\r\n\r\n    /**\r\n     * Removes applied styles from HTML elements.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    remove: function remove() {\r\n      var slides = Components.Html.slides;\r\n\r\n      for (var i = 0; i < slides.length; i++) {\r\n        slides[i].style.width = '';\r\n      }\r\n\r\n      Components.Html.wrapper.style.width = '';\r\n    }\r\n  };\r\n  define(Sizes, 'length', {\r\n    /**\r\n     * Gets count number of the slides.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      return Components.Html.slides.length;\r\n    }\r\n  });\r\n  define(Sizes, 'width', {\r\n    /**\r\n     * Gets width value of the slider (visible area).\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      return Components.Html.track.offsetWidth;\r\n    }\r\n  });\r\n  define(Sizes, 'wrapperSize', {\r\n    /**\r\n     * Gets size of the slides wrapper.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\r\n    }\r\n  });\r\n  define(Sizes, 'slideWidth', {\r\n    /**\r\n     * Gets width value of a single slide.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\r\n    }\r\n  });\r\n  /**\r\n   * Apply calculated glide's dimensions:\r\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\r\n   * - when resizing window to recalculate sildes dimensions\r\n   * - on updating via API, to calculate dimensions based on new options\r\n   */\r\n\r\n  Events.on(['build.before', 'resize', 'update'], function () {\r\n    Sizes.setupSlides();\r\n    Sizes.setupWrapper();\r\n  });\r\n  /**\r\n   * Remove calculated glide's dimensions:\r\n   * - on destoting to bring markup to its inital state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Sizes.remove();\r\n  });\r\n  return Sizes;\r\n}\r\n\r\nfunction Build (Glide, Components, Events) {\r\n  var Build = {\r\n    /**\r\n     * Init glide building. Adds classes, sets\r\n     * dimensions and setups initial state.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      Events.emit('build.before');\r\n      this.typeClass();\r\n      this.activeClass();\r\n      Events.emit('build.after');\r\n    },\r\n\r\n    /**\r\n     * Adds `type` class to the glide element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    typeClass: function typeClass() {\r\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\r\n    },\r\n\r\n    /**\r\n     * Sets active class to current slide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    activeClass: function activeClass() {\r\n      var classes = Glide.settings.classes;\r\n      var slide = Components.Html.slides[Glide.index];\r\n\r\n      if (slide) {\r\n        slide.classList.add(classes.slide.active);\r\n        siblings(slide).forEach(function (sibling) {\r\n          sibling.classList.remove(classes.slide.active);\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes HTML classes applied at building.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeClasses: function removeClasses() {\r\n      var _Glide$settings$class = Glide.settings.classes,\r\n          type = _Glide$settings$class.type,\r\n          slide = _Glide$settings$class.slide;\r\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\r\n      Components.Html.slides.forEach(function (sibling) {\r\n        sibling.classList.remove(slide.active);\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Clear building classes:\r\n   * - on destroying to bring HTML to its initial state\r\n   * - on updating to remove classes before remounting component\r\n   */\r\n\r\n  Events.on(['destroy', 'update'], function () {\r\n    Build.removeClasses();\r\n  });\r\n  /**\r\n   * Remount component:\r\n   * - on resizing of the window to calculate new dimensions\r\n   * - on updating settings via API\r\n   */\r\n\r\n  Events.on(['resize', 'update'], function () {\r\n    Build.mount();\r\n  });\r\n  /**\r\n   * Swap active class of current slide:\r\n   * - after each move to the new index\r\n   */\r\n\r\n  Events.on('move.after', function () {\r\n    Build.activeClass();\r\n  });\r\n  return Build;\r\n}\r\n\r\nfunction Clones (Glide, Components, Events) {\r\n  var Clones = {\r\n    /**\r\n     * Create pattern map and collect slides to be cloned.\r\n     */\r\n    mount: function mount() {\r\n      this.items = [];\r\n\r\n      if (Glide.isType('carousel')) {\r\n        this.items = this.collect();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Collect clones with pattern.\r\n     *\r\n     * @return {[]}\r\n     */\r\n    collect: function collect() {\r\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n      var slides = Components.Html.slides;\r\n      var _Glide$settings = Glide.settings,\r\n          perView = _Glide$settings.perView,\r\n          classes = _Glide$settings.classes,\r\n          cloningRatio = _Glide$settings.cloningRatio;\r\n\r\n      if (slides.length !== 0) {\r\n        var peekIncrementer = +!!Glide.settings.peek;\r\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\r\n        var append = slides.slice(0, cloneCount).reverse();\r\n        var prepend = slides.slice(cloneCount * -1);\r\n\r\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\r\n          for (var i = 0; i < append.length; i++) {\r\n            var clone = append[i].cloneNode(true);\r\n            clone.classList.add(classes.slide.clone);\r\n            items.push(clone);\r\n          }\r\n\r\n          for (var _i = 0; _i < prepend.length; _i++) {\r\n            var _clone = prepend[_i].cloneNode(true);\r\n\r\n            _clone.classList.add(classes.slide.clone);\r\n\r\n            items.unshift(_clone);\r\n          }\r\n        }\r\n      }\r\n\r\n      return items;\r\n    },\r\n\r\n    /**\r\n     * Append cloned slides with generated pattern.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    append: function append() {\r\n      var items = this.items;\r\n      var _Components$Html = Components.Html,\r\n          wrapper = _Components$Html.wrapper,\r\n          slides = _Components$Html.slides;\r\n      var half = Math.floor(items.length / 2);\r\n      var prepend = items.slice(0, half).reverse();\r\n      var append = items.slice(half * -1).reverse();\r\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\r\n\r\n      for (var i = 0; i < append.length; i++) {\r\n        wrapper.appendChild(append[i]);\r\n      }\r\n\r\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\r\n        wrapper.insertBefore(prepend[_i2], slides[0]);\r\n      }\r\n\r\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\r\n        items[_i3].style.width = width;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Remove all cloned slides.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    remove: function remove() {\r\n      var items = this.items;\r\n\r\n      for (var i = 0; i < items.length; i++) {\r\n        Components.Html.wrapper.removeChild(items[i]);\r\n      }\r\n    }\r\n  };\r\n  define(Clones, 'grow', {\r\n    /**\r\n     * Gets additional dimensions value caused by clones.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\r\n    }\r\n  });\r\n  /**\r\n   * Append additional slide's clones:\r\n   * - while glide's type is `carousel`\r\n   */\r\n\r\n  Events.on('update', function () {\r\n    Clones.remove();\r\n    Clones.mount();\r\n    Clones.append();\r\n  });\r\n  /**\r\n   * Append additional slide's clones:\r\n   * - while glide's type is `carousel`\r\n   */\r\n\r\n  Events.on('build.before', function () {\r\n    if (Glide.isType('carousel')) {\r\n      Clones.append();\r\n    }\r\n  });\r\n  /**\r\n   * Remove clones HTMLElements:\r\n   * - on destroying, to bring HTML to its initial state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Clones.remove();\r\n  });\r\n  return Clones;\r\n}\r\n\r\nvar EventsBinder = /*#__PURE__*/function () {\r\n  /**\r\n   * Construct a EventsBinder instance.\r\n   */\r\n  function EventsBinder() {\r\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n    _classCallCheck(this, EventsBinder);\r\n\r\n    this.listeners = listeners;\r\n  }\r\n  /**\r\n   * Adds events listeners to arrows HTML elements.\r\n   *\r\n   * @param  {String|Array} events\r\n   * @param  {Element|Window|Document} el\r\n   * @param  {Function} closure\r\n   * @param  {Boolean|Object} capture\r\n   * @return {Void}\r\n   */\r\n\r\n\r\n  _createClass(EventsBinder, [{\r\n    key: \"on\",\r\n    value: function on(events, el, closure) {\r\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\r\n\r\n      if (isString(events)) {\r\n        events = [events];\r\n      }\r\n\r\n      for (var i = 0; i < events.length; i++) {\r\n        this.listeners[events[i]] = closure;\r\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\r\n      }\r\n    }\r\n    /**\r\n     * Removes event listeners from arrows HTML elements.\r\n     *\r\n     * @param  {String|Array} events\r\n     * @param  {Element|Window|Document} el\r\n     * @param  {Boolean|Object} capture\r\n     * @return {Void}\r\n     */\r\n\r\n  }, {\r\n    key: \"off\",\r\n    value: function off(events, el) {\r\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n\r\n      if (isString(events)) {\r\n        events = [events];\r\n      }\r\n\r\n      for (var i = 0; i < events.length; i++) {\r\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\r\n      }\r\n    }\r\n    /**\r\n     * Destroy collected listeners.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function destroy() {\r\n      delete this.listeners;\r\n    }\r\n  }]);\r\n\r\n  return EventsBinder;\r\n}();\r\n\r\nfunction Resize (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  var Resize = {\r\n    /**\r\n     * Initializes window bindings.\r\n     */\r\n    mount: function mount() {\r\n      this.bind();\r\n    },\r\n\r\n    /**\r\n     * Binds `rezsize` listener to the window.\r\n     * It's a costly event, so we are debouncing it.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind: function bind() {\r\n      Binder.on('resize', window, throttle(function () {\r\n        Events.emit('resize');\r\n      }, Glide.settings.throttle));\r\n    },\r\n\r\n    /**\r\n     * Unbinds listeners from the window.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind: function unbind() {\r\n      Binder.off('resize', window);\r\n    }\r\n  };\r\n  /**\r\n   * Remove bindings from window:\r\n   * - on destroying, to remove added EventListener\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Resize.unbind();\r\n    Binder.destroy();\r\n  });\r\n  return Resize;\r\n}\r\n\r\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\r\nvar FLIPED_MOVEMENTS = {\r\n  '>': '<',\r\n  '<': '>',\r\n  '=': '='\r\n};\r\nfunction Direction (Glide, Components, Events) {\r\n  var Direction = {\r\n    /**\r\n     * Setups gap value based on settings.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      this.value = Glide.settings.direction;\r\n    },\r\n\r\n    /**\r\n     * Resolves pattern based on direction value\r\n     *\r\n     * @param {String} pattern\r\n     * @returns {String}\r\n     */\r\n    resolve: function resolve(pattern) {\r\n      var token = pattern.slice(0, 1);\r\n\r\n      if (this.is('rtl')) {\r\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\r\n      }\r\n\r\n      return pattern;\r\n    },\r\n\r\n    /**\r\n     * Checks value of direction mode.\r\n     *\r\n     * @param {String} direction\r\n     * @returns {Boolean}\r\n     */\r\n    is: function is(direction) {\r\n      return this.value === direction;\r\n    },\r\n\r\n    /**\r\n     * Applies direction class to the root HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    addClass: function addClass() {\r\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\r\n    },\r\n\r\n    /**\r\n     * Removes direction class from the root HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeClass: function removeClass() {\r\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\r\n    }\r\n  };\r\n  define(Direction, 'value', {\r\n    /**\r\n     * Gets value of the direction.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    get: function get() {\r\n      return Direction._v;\r\n    },\r\n\r\n    /**\r\n     * Sets value of the direction.\r\n     *\r\n     * @param {String} value\r\n     * @return {Void}\r\n     */\r\n    set: function set(value) {\r\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\r\n        Direction._v = value;\r\n      } else {\r\n        warn('Direction value must be `ltr` or `rtl`');\r\n      }\r\n    }\r\n  });\r\n  /**\r\n   * Clear direction class:\r\n   * - on destroy to bring HTML to its initial state\r\n   * - on update to remove class before reappling bellow\r\n   */\r\n\r\n  Events.on(['destroy', 'update'], function () {\r\n    Direction.removeClass();\r\n  });\r\n  /**\r\n   * Remount component:\r\n   * - on update to reflect changes in direction value\r\n   */\r\n\r\n  Events.on('update', function () {\r\n    Direction.mount();\r\n  });\r\n  /**\r\n   * Apply direction class:\r\n   * - before building to apply class for the first time\r\n   * - on updating to reapply direction class that may changed\r\n   */\r\n\r\n  Events.on(['build.before', 'update'], function () {\r\n    Direction.addClass();\r\n  });\r\n  return Direction;\r\n}\r\n\r\n/**\r\n * Reflects value of glide movement.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nfunction Rtl (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Negates the passed translate if glide is in RTL option.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify: function modify(translate) {\r\n      if (Components.Direction.is('rtl')) {\r\n        return -translate;\r\n      }\r\n\r\n      return translate;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Updates glide movement with a `gap` settings.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nfunction Gap (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Modifies passed translate value with number in the `gap` settings.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify: function modify(translate) {\r\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\r\n      return translate + Components.Gaps.value * multiplier;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Updates glide movement with width of additional clones width.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nfunction Grow (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Adds to the passed translate width of the half of clones.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify: function modify(translate) {\r\n      return translate + Components.Clones.grow / 2;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Updates glide movement with a `peek` settings.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\n\r\nfunction Peeking (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Modifies passed translate value with a `peek` setting.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify: function modify(translate) {\r\n      if (Glide.settings.focusAt >= 0) {\r\n        var peek = Components.Peek.value;\r\n\r\n        if (isObject(peek)) {\r\n          return translate - peek.before;\r\n        }\r\n\r\n        return translate - peek;\r\n      }\r\n\r\n      return translate;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Updates glide movement with a `focusAt` settings.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\nfunction Focusing (Glide, Components) {\r\n  return {\r\n    /**\r\n     * Modifies passed translate value with index in the `focusAt` setting.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    modify: function modify(translate) {\r\n      var gap = Components.Gaps.value;\r\n      var width = Components.Sizes.width;\r\n      var focusAt = Glide.settings.focusAt;\r\n      var slideWidth = Components.Sizes.slideWidth;\r\n\r\n      if (focusAt === 'center') {\r\n        return translate - (width / 2 - slideWidth / 2);\r\n      }\r\n\r\n      return translate - slideWidth * focusAt - gap * focusAt;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Applies diffrent transformers on translate value.\r\n *\r\n * @param  {Object} Glide\r\n * @param  {Object} Components\r\n * @return {Object}\r\n */\r\n\r\nfunction mutator (Glide, Components, Events) {\r\n  /**\r\n   * Merge instance transformers with collection of default transformers.\r\n   * It's important that the Rtl component be last on the list,\r\n   * so it reflects all previous transformations.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\r\n  return {\r\n    /**\r\n     * Piplines translate value with registered transformers.\r\n     *\r\n     * @param  {Number} translate\r\n     * @return {Number}\r\n     */\r\n    mutate: function mutate(translate) {\r\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\r\n        var transformer = TRANSFORMERS[i];\r\n\r\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\r\n          translate = transformer(Glide, Components, Events).modify(translate);\r\n        } else {\r\n          warn('Transformer should be a function that returns an object with `modify()` method');\r\n        }\r\n      }\r\n\r\n      return translate;\r\n    }\r\n  };\r\n}\r\n\r\nfunction Translate (Glide, Components, Events) {\r\n  var Translate = {\r\n    /**\r\n     * Sets value of translate on HTML element.\r\n     *\r\n     * @param {Number} value\r\n     * @return {Void}\r\n     */\r\n    set: function set(value) {\r\n      var transform = mutator(Glide, Components).mutate(value);\r\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\r\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\r\n\r\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\r\n\r\n      Components.Html.wrapper.style.transform = translate3d;\r\n    },\r\n\r\n    /**\r\n     * Removes value of translate from HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    remove: function remove() {\r\n      Components.Html.wrapper.style.transform = '';\r\n    },\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    getStartIndex: function getStartIndex() {\r\n      var length = Components.Sizes.length;\r\n      var index = Glide.index;\r\n      var perView = Glide.settings.perView;\r\n\r\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\r\n        return length + (index - perView);\r\n      } // \"modulo length\" converts an index that equals length to zero\r\n\r\n\r\n      return (index + perView) % length;\r\n    },\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    getTravelDistance: function getTravelDistance() {\r\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\r\n\r\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\r\n        // reverse travel distance so that we don't have to change subtract operations\r\n        return travelDistance * -1;\r\n      }\r\n\r\n      return travelDistance;\r\n    }\r\n  };\r\n  /**\r\n   * Set new translate value:\r\n   * - on move to reflect index change\r\n   * - on updating via API to reflect possible changes in options\r\n   */\r\n\r\n  Events.on('move', function (context) {\r\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\r\n      return Translate.set(context.movement);\r\n    }\r\n\r\n    Components.Transition.after(function () {\r\n      Events.emit('translate.jump');\r\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\r\n    });\r\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\r\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\r\n  });\r\n  /**\r\n   * Remove translate:\r\n   * - on destroying to bring markup to its inital state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Translate.remove();\r\n  });\r\n  return Translate;\r\n}\r\n\r\nfunction Transition (Glide, Components, Events) {\r\n  /**\r\n   * Holds inactivity status of transition.\r\n   * When true transition is not applied.\r\n   *\r\n   * @type {Boolean}\r\n   */\r\n  var disabled = false;\r\n  var Transition = {\r\n    /**\r\n     * Composes string of the CSS transition.\r\n     *\r\n     * @param {String} property\r\n     * @return {String}\r\n     */\r\n    compose: function compose(property) {\r\n      var settings = Glide.settings;\r\n\r\n      if (!disabled) {\r\n        return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\r\n      }\r\n\r\n      return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\r\n    },\r\n\r\n    /**\r\n     * Sets value of transition on HTML element.\r\n     *\r\n     * @param {String=} property\r\n     * @return {Void}\r\n     */\r\n    set: function set() {\r\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\r\n      Components.Html.wrapper.style.transition = this.compose(property);\r\n    },\r\n\r\n    /**\r\n     * Removes value of transition from HTML element.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    remove: function remove() {\r\n      Components.Html.wrapper.style.transition = '';\r\n    },\r\n\r\n    /**\r\n     * Runs callback after animation.\r\n     *\r\n     * @param  {Function} callback\r\n     * @return {Void}\r\n     */\r\n    after: function after(callback) {\r\n      setTimeout(function () {\r\n        callback();\r\n      }, this.duration);\r\n    },\r\n\r\n    /**\r\n     * Enable transition.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    enable: function enable() {\r\n      disabled = false;\r\n      this.set();\r\n    },\r\n\r\n    /**\r\n     * Disable transition.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    disable: function disable() {\r\n      disabled = true;\r\n      this.set();\r\n    }\r\n  };\r\n  define(Transition, 'duration', {\r\n    /**\r\n     * Gets duration of the transition based\r\n     * on currently running animation type.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      var settings = Glide.settings;\r\n\r\n      if (Glide.isType('slider') && Components.Run.offset) {\r\n        return settings.rewindDuration;\r\n      }\r\n\r\n      return settings.animationDuration;\r\n    }\r\n  });\r\n  /**\r\n   * Set transition `style` value:\r\n   * - on each moving, because it may be cleared by offset move\r\n   */\r\n\r\n  Events.on('move', function () {\r\n    Transition.set();\r\n  });\r\n  /**\r\n   * Disable transition:\r\n   * - before initial build to avoid transitioning from `0` to `startAt` index\r\n   * - while resizing window and recalculating dimensions\r\n   * - on jumping from offset transition at start and end edges in `carousel` type\r\n   */\r\n\r\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\r\n    Transition.disable();\r\n  });\r\n  /**\r\n   * Enable transition:\r\n   * - on each running, because it may be disabled by offset move\r\n   */\r\n\r\n  Events.on('run', function () {\r\n    Transition.enable();\r\n  });\r\n  /**\r\n   * Remove transition:\r\n   * - on destroying to bring markup to its inital state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Transition.remove();\r\n  });\r\n  return Transition;\r\n}\r\n\r\n/**\r\n * Test via a getter in the options object to see\r\n * if the passive property is accessed.\r\n *\r\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\r\n */\r\nvar supportsPassive = false;\r\n\r\ntry {\r\n  var opts = Object.defineProperty({}, 'passive', {\r\n    get: function get() {\r\n      supportsPassive = true;\r\n    }\r\n  });\r\n  window.addEventListener('testPassive', null, opts);\r\n  window.removeEventListener('testPassive', null, opts);\r\n} catch (e) {}\r\n\r\nvar supportsPassive$1 = supportsPassive;\r\n\r\nvar START_EVENTS = ['touchstart', 'mousedown'];\r\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\r\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\r\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\r\nfunction Swipe (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  var swipeSin = 0;\r\n  var swipeStartX = 0;\r\n  var swipeStartY = 0;\r\n  var disabled = false;\r\n  var capture = supportsPassive$1 ? {\r\n    passive: true\r\n  } : false;\r\n  var Swipe = {\r\n    /**\r\n     * Initializes swipe bindings.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      this.bindSwipeStart();\r\n    },\r\n\r\n    /**\r\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\r\n     *\r\n     * @param {Object} event\r\n     * @return {Void}\r\n     */\r\n    start: function start(event) {\r\n      if (!disabled && !Glide.disabled) {\r\n        this.disable();\r\n        var swipe = this.touches(event);\r\n        swipeSin = null;\r\n        swipeStartX = toInt(swipe.pageX);\r\n        swipeStartY = toInt(swipe.pageY);\r\n        this.bindSwipeMove();\r\n        this.bindSwipeEnd();\r\n        Events.emit('swipe.start');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\r\n     *\r\n     * @param {Object} event\r\n     */\r\n    move: function move(event) {\r\n      if (!Glide.disabled) {\r\n        var _Glide$settings = Glide.settings,\r\n            touchAngle = _Glide$settings.touchAngle,\r\n            touchRatio = _Glide$settings.touchRatio,\r\n            classes = _Glide$settings.classes;\r\n        var swipe = this.touches(event);\r\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\r\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\r\n        var powEX = Math.abs(subExSx << 2);\r\n        var powEY = Math.abs(subEySy << 2);\r\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\r\n        var swipeCathetus = Math.sqrt(powEY);\r\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\r\n\r\n        if (swipeSin * 180 / Math.PI < touchAngle) {\r\n          event.stopPropagation();\r\n          Components.Move.make(subExSx * toFloat(touchRatio));\r\n          Components.Html.root.classList.add(classes.dragging);\r\n          Events.emit('swipe.move');\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\r\n     *\r\n     * @param {Object} event\r\n     * @return {Void}\r\n     */\r\n    end: function end(event) {\r\n      if (!Glide.disabled) {\r\n        var _Glide$settings2 = Glide.settings,\r\n            perSwipe = _Glide$settings2.perSwipe,\r\n            touchAngle = _Glide$settings2.touchAngle,\r\n            classes = _Glide$settings2.classes;\r\n        var swipe = this.touches(event);\r\n        var threshold = this.threshold(event);\r\n        var swipeDistance = swipe.pageX - swipeStartX;\r\n        var swipeDeg = swipeSin * 180 / Math.PI;\r\n        this.enable();\r\n\r\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\r\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\r\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\r\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\r\n        } else {\r\n          // While swipe don't reach distance apply previous transform.\r\n          Components.Move.make();\r\n        }\r\n\r\n        Components.Html.root.classList.remove(classes.dragging);\r\n        this.unbindSwipeMove();\r\n        this.unbindSwipeEnd();\r\n        Events.emit('swipe.end');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Binds swipe's starting event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bindSwipeStart: function bindSwipeStart() {\r\n      var _this = this;\r\n\r\n      var _Glide$settings3 = Glide.settings,\r\n          swipeThreshold = _Glide$settings3.swipeThreshold,\r\n          dragThreshold = _Glide$settings3.dragThreshold;\r\n\r\n      if (swipeThreshold) {\r\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\r\n          _this.start(event);\r\n        }, capture);\r\n      }\r\n\r\n      if (dragThreshold) {\r\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\r\n          _this.start(event);\r\n        }, capture);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Unbinds swipe's starting event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbindSwipeStart: function unbindSwipeStart() {\r\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\r\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\r\n    },\r\n\r\n    /**\r\n     * Binds swipe's moving event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bindSwipeMove: function bindSwipeMove() {\r\n      var _this2 = this;\r\n\r\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\r\n        _this2.move(event);\r\n      }, Glide.settings.throttle), capture);\r\n    },\r\n\r\n    /**\r\n     * Unbinds swipe's moving event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbindSwipeMove: function unbindSwipeMove() {\r\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\r\n    },\r\n\r\n    /**\r\n     * Binds swipe's ending event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bindSwipeEnd: function bindSwipeEnd() {\r\n      var _this3 = this;\r\n\r\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\r\n        _this3.end(event);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Unbinds swipe's ending event.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbindSwipeEnd: function unbindSwipeEnd() {\r\n      Binder.off(END_EVENTS, Components.Html.wrapper);\r\n    },\r\n\r\n    /**\r\n     * Normalizes event touches points accorting to different types.\r\n     *\r\n     * @param {Object} event\r\n     */\r\n    touches: function touches(event) {\r\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\r\n        return event;\r\n      }\r\n\r\n      return event.touches[0] || event.changedTouches[0];\r\n    },\r\n\r\n    /**\r\n     * Gets value of minimum swipe distance settings based on event type.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    threshold: function threshold(event) {\r\n      var settings = Glide.settings;\r\n\r\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\r\n        return settings.dragThreshold;\r\n      }\r\n\r\n      return settings.swipeThreshold;\r\n    },\r\n\r\n    /**\r\n     * Enables swipe event.\r\n     *\r\n     * @return {self}\r\n     */\r\n    enable: function enable() {\r\n      disabled = false;\r\n      Components.Transition.enable();\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Disables swipe event.\r\n     *\r\n     * @return {self}\r\n     */\r\n    disable: function disable() {\r\n      disabled = true;\r\n      Components.Transition.disable();\r\n      return this;\r\n    }\r\n  };\r\n  /**\r\n   * Add component class:\r\n   * - after initial building\r\n   */\r\n\r\n  Events.on('build.after', function () {\r\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\r\n  });\r\n  /**\r\n   * Remove swiping bindings:\r\n   * - on destroying, to remove added EventListeners\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Swipe.unbindSwipeStart();\r\n    Swipe.unbindSwipeMove();\r\n    Swipe.unbindSwipeEnd();\r\n    Binder.destroy();\r\n  });\r\n  return Swipe;\r\n}\r\n\r\nfunction Images (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  var Images = {\r\n    /**\r\n     * Binds listener to glide wrapper.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      this.bind();\r\n    },\r\n\r\n    /**\r\n     * Binds `dragstart` event on wrapper to prevent dragging images.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind: function bind() {\r\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\r\n    },\r\n\r\n    /**\r\n     * Unbinds `dragstart` event on wrapper.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind: function unbind() {\r\n      Binder.off('dragstart', Components.Html.wrapper);\r\n    },\r\n\r\n    /**\r\n     * Event handler. Prevents dragging.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    dragstart: function dragstart(event) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n  /**\r\n   * Remove bindings from images:\r\n   * - on destroying, to remove added EventListeners\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Images.unbind();\r\n    Binder.destroy();\r\n  });\r\n  return Images;\r\n}\r\n\r\nfunction Anchors (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  /**\r\n   * Holds detaching status of anchors.\r\n   * Prevents detaching of already detached anchors.\r\n   *\r\n   * @private\r\n   * @type {Boolean}\r\n   */\r\n\r\n  var detached = false;\r\n  /**\r\n   * Holds preventing status of anchors.\r\n   * If `true` redirection after click will be disabled.\r\n   *\r\n   * @private\r\n   * @type {Boolean}\r\n   */\r\n\r\n  var prevented = false;\r\n  var Anchors = {\r\n    /**\r\n     * Setups a initial state of anchors component.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    mount: function mount() {\r\n      /**\r\n       * Holds collection of anchors elements.\r\n       *\r\n       * @private\r\n       * @type {HTMLCollection}\r\n       */\r\n      this._a = Components.Html.wrapper.querySelectorAll('a');\r\n      this.bind();\r\n    },\r\n\r\n    /**\r\n     * Binds events to anchors inside a track.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind: function bind() {\r\n      Binder.on('click', Components.Html.wrapper, this.click);\r\n    },\r\n\r\n    /**\r\n     * Unbinds events attached to anchors inside a track.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind: function unbind() {\r\n      Binder.off('click', Components.Html.wrapper);\r\n    },\r\n\r\n    /**\r\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\r\n     *\r\n     * @param  {Object} event\r\n     * @return {Void}\r\n     */\r\n    click: function click(event) {\r\n      if (prevented) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Detaches anchors click event inside glide.\r\n     *\r\n     * @return {self}\r\n     */\r\n    detach: function detach() {\r\n      prevented = true;\r\n\r\n      if (!detached) {\r\n        for (var i = 0; i < this.items.length; i++) {\r\n          this.items[i].draggable = false;\r\n        }\r\n\r\n        detached = true;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Attaches anchors click events inside glide.\r\n     *\r\n     * @return {self}\r\n     */\r\n    attach: function attach() {\r\n      prevented = false;\r\n\r\n      if (detached) {\r\n        for (var i = 0; i < this.items.length; i++) {\r\n          this.items[i].draggable = true;\r\n        }\r\n\r\n        detached = false;\r\n      }\r\n\r\n      return this;\r\n    }\r\n  };\r\n  define(Anchors, 'items', {\r\n    /**\r\n     * Gets collection of the arrows HTML elements.\r\n     *\r\n     * @return {HTMLElement[]}\r\n     */\r\n    get: function get() {\r\n      return Anchors._a;\r\n    }\r\n  });\r\n  /**\r\n   * Detach anchors inside slides:\r\n   * - on swiping, so they won't redirect to its `href` attributes\r\n   */\r\n\r\n  Events.on('swipe.move', function () {\r\n    Anchors.detach();\r\n  });\r\n  /**\r\n   * Attach anchors inside slides:\r\n   * - after swiping and transitions ends, so they can redirect after click again\r\n   */\r\n\r\n  Events.on('swipe.end', function () {\r\n    Components.Transition.after(function () {\r\n      Anchors.attach();\r\n    });\r\n  });\r\n  /**\r\n   * Unbind anchors inside slides:\r\n   * - on destroying, to bring anchors to its initial state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Anchors.attach();\r\n    Anchors.unbind();\r\n    Binder.destroy();\r\n  });\r\n  return Anchors;\r\n}\r\n\r\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\r\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\r\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\r\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\r\nfunction Controls (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  var capture = supportsPassive$1 ? {\r\n    passive: true\r\n  } : false;\r\n  var Controls = {\r\n    /**\r\n     * Inits arrows. Binds events listeners\r\n     * to the arrows HTML elements.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      /**\r\n       * Collection of navigation HTML elements.\r\n       *\r\n       * @private\r\n       * @type {HTMLCollection}\r\n       */\r\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\r\n      /**\r\n       * Collection of controls HTML elements.\r\n       *\r\n       * @private\r\n       * @type {HTMLCollection}\r\n       */\r\n\r\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\r\n      /**\r\n       * Collection of arrow control HTML elements.\r\n       *\r\n       * @private\r\n       * @type {Object}\r\n       */\r\n\r\n      this._arrowControls = {\r\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\r\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\r\n      };\r\n      this.addBindings();\r\n    },\r\n\r\n    /**\r\n     * Sets active class to current slide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    setActive: function setActive() {\r\n      for (var i = 0; i < this._n.length; i++) {\r\n        this.addClass(this._n[i].children);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes active class to current slide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeActive: function removeActive() {\r\n      for (var i = 0; i < this._n.length; i++) {\r\n        this.removeClass(this._n[i].children);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Toggles active class on items inside navigation.\r\n     *\r\n     * @param  {HTMLElement} controls\r\n     * @return {Void}\r\n     */\r\n    addClass: function addClass(controls) {\r\n      var settings = Glide.settings;\r\n      var item = controls[Glide.index];\r\n\r\n      if (!item) {\r\n        return;\r\n      }\r\n\r\n      if (item) {\r\n        item.classList.add(settings.classes.nav.active);\r\n        siblings(item).forEach(function (sibling) {\r\n          sibling.classList.remove(settings.classes.nav.active);\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes active class from active control.\r\n     *\r\n     * @param  {HTMLElement} controls\r\n     * @return {Void}\r\n     */\r\n    removeClass: function removeClass(controls) {\r\n      var item = controls[Glide.index];\r\n\r\n      if (item) {\r\n        item.classList.remove(Glide.settings.classes.nav.active);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\r\n     */\r\n    setArrowState: function setArrowState() {\r\n      if (Glide.settings.rewind) {\r\n        return;\r\n      }\r\n\r\n      var next = Controls._arrowControls.next;\r\n      var previous = Controls._arrowControls.previous;\r\n      this.resetArrowState(next, previous);\r\n\r\n      if (Glide.index === 0) {\r\n        this.disableArrow(previous);\r\n      }\r\n\r\n      if (Glide.index === Components.Run.length) {\r\n        this.disableArrow(next);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\r\n     *\r\n     * @param {NodeList[]} lists\r\n     */\r\n    resetArrowState: function resetArrowState() {\r\n      var settings = Glide.settings;\r\n\r\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        lists[_key] = arguments[_key];\r\n      }\r\n\r\n      lists.forEach(function (list) {\r\n        list.forEach(function (element) {\r\n          element.classList.remove(settings.classes.arrow.disabled);\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\r\n     *\r\n     * @param {NodeList[]} lists\r\n     */\r\n    disableArrow: function disableArrow() {\r\n      var settings = Glide.settings;\r\n\r\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        lists[_key2] = arguments[_key2];\r\n      }\r\n\r\n      lists.forEach(function (list) {\r\n        list.forEach(function (element) {\r\n          element.classList.add(settings.classes.arrow.disabled);\r\n        });\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Adds handles to the each group of controls.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    addBindings: function addBindings() {\r\n      for (var i = 0; i < this._c.length; i++) {\r\n        this.bind(this._c[i].children);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes handles from the each group of controls.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    removeBindings: function removeBindings() {\r\n      for (var i = 0; i < this._c.length; i++) {\r\n        this.unbind(this._c[i].children);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Binds events to arrows HTML elements.\r\n     *\r\n     * @param {HTMLCollection} elements\r\n     * @return {Void}\r\n     */\r\n    bind: function bind(elements) {\r\n      for (var i = 0; i < elements.length; i++) {\r\n        Binder.on('click', elements[i], this.click);\r\n        Binder.on('touchstart', elements[i], this.click, capture);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Unbinds events binded to the arrows HTML elements.\r\n     *\r\n     * @param {HTMLCollection} elements\r\n     * @return {Void}\r\n     */\r\n    unbind: function unbind(elements) {\r\n      for (var i = 0; i < elements.length; i++) {\r\n        Binder.off(['click', 'touchstart'], elements[i]);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Handles `click` event on the arrows HTML elements.\r\n     * Moves slider in direction given via the\r\n     * `data-glide-dir` attribute.\r\n     *\r\n     * @param {Object} event\r\n     * @return {void}\r\n     */\r\n    click: function click(event) {\r\n      if (!supportsPassive$1 && event.type === 'touchstart') {\r\n        event.preventDefault();\r\n      }\r\n\r\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\r\n      Components.Run.make(Components.Direction.resolve(direction));\r\n    }\r\n  };\r\n  define(Controls, 'items', {\r\n    /**\r\n     * Gets collection of the controls HTML elements.\r\n     *\r\n     * @return {HTMLElement[]}\r\n     */\r\n    get: function get() {\r\n      return Controls._c;\r\n    }\r\n  });\r\n  /**\r\n   * Swap active class of current navigation item:\r\n   * - after mounting to set it to initial index\r\n   * - after each move to the new index\r\n   */\r\n\r\n  Events.on(['mount.after', 'move.after'], function () {\r\n    Controls.setActive();\r\n  });\r\n  /**\r\n   * Add or remove disabled class of arrow elements\r\n   */\r\n\r\n  Events.on(['mount.after', 'run'], function () {\r\n    Controls.setArrowState();\r\n  });\r\n  /**\r\n   * Remove bindings and HTML Classes:\r\n   * - on destroying, to bring markup to its initial state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Controls.removeBindings();\r\n    Controls.removeActive();\r\n    Binder.destroy();\r\n  });\r\n  return Controls;\r\n}\r\n\r\nfunction Keyboard (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  var Keyboard = {\r\n    /**\r\n     * Binds keyboard events on component mount.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      if (Glide.settings.keyboard) {\r\n        this.bind();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Adds keyboard press events.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind: function bind() {\r\n      Binder.on('keyup', document, this.press);\r\n    },\r\n\r\n    /**\r\n     * Removes keyboard press events.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    unbind: function unbind() {\r\n      Binder.off('keyup', document);\r\n    },\r\n\r\n    /**\r\n     * Handles keyboard's arrows press and moving glide foward and backward.\r\n     *\r\n     * @param  {Object} event\r\n     * @return {Void}\r\n     */\r\n    press: function press(event) {\r\n      var perSwipe = Glide.settings.perSwipe;\r\n\r\n      if (event.keyCode === 39) {\r\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\r\n      }\r\n\r\n      if (event.keyCode === 37) {\r\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Remove bindings from keyboard:\r\n   * - on destroying to remove added events\r\n   * - on updating to remove events before remounting\r\n   */\r\n\r\n  Events.on(['destroy', 'update'], function () {\r\n    Keyboard.unbind();\r\n  });\r\n  /**\r\n   * Remount component\r\n   * - on updating to reflect potential changes in settings\r\n   */\r\n\r\n  Events.on('update', function () {\r\n    Keyboard.mount();\r\n  });\r\n  /**\r\n   * Destroy binder:\r\n   * - on destroying to remove listeners\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Binder.destroy();\r\n  });\r\n  return Keyboard;\r\n}\r\n\r\nfunction Autoplay (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  var Autoplay = {\r\n    /**\r\n     * Initializes autoplaying and events.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    mount: function mount() {\r\n      this.enable();\r\n      this.start();\r\n\r\n      if (Glide.settings.hoverpause) {\r\n        this.bind();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Enables autoplaying\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    enable: function enable() {\r\n      this._e = true;\r\n    },\r\n\r\n    /**\r\n     * Disables autoplaying.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    disable: function disable() {\r\n      this._e = false;\r\n    },\r\n\r\n    /**\r\n     * Starts autoplaying in configured interval.\r\n     *\r\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Void}\r\n     */\r\n    start: function start() {\r\n      var _this = this;\r\n\r\n      if (!this._e) {\r\n        return;\r\n      }\r\n\r\n      this.enable();\r\n\r\n      if (Glide.settings.autoplay) {\r\n        if (isUndefined(this._i)) {\r\n          this._i = setInterval(function () {\r\n            _this.stop();\r\n\r\n            Components.Run.make('>');\r\n\r\n            _this.start();\r\n\r\n            Events.emit('autoplay');\r\n          }, this.time);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Stops autorunning of the glide.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    stop: function stop() {\r\n      this._i = clearInterval(this._i);\r\n    },\r\n\r\n    /**\r\n     * Stops autoplaying while mouse is over glide's area.\r\n     *\r\n     * @return {Void}\r\n     */\r\n    bind: function bind() {\r\n      var _this2 = this;\r\n\r\n      Binder.on('mouseover', Components.Html.root, function () {\r\n        if (_this2._e) {\r\n          _this2.stop();\r\n        }\r\n      });\r\n      Binder.on('mouseout', Components.Html.root, function () {\r\n        if (_this2._e) {\r\n          _this2.start();\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Unbind mouseover events.\r\n     *\r\n     * @returns {Void}\r\n     */\r\n    unbind: function unbind() {\r\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\r\n    }\r\n  };\r\n  define(Autoplay, 'time', {\r\n    /**\r\n     * Gets time period value for the autoplay interval. Prioritizes\r\n     * times in `data-glide-autoplay` attrubutes over options.\r\n     *\r\n     * @return {Number}\r\n     */\r\n    get: function get() {\r\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\r\n\r\n      if (autoplay) {\r\n        return toInt(autoplay);\r\n      }\r\n\r\n      return toInt(Glide.settings.autoplay);\r\n    }\r\n  });\r\n  /**\r\n   * Stop autoplaying and unbind events:\r\n   * - on destroying, to clear defined interval\r\n   * - on updating via API to reset interval that may changed\r\n   */\r\n\r\n  Events.on(['destroy', 'update'], function () {\r\n    Autoplay.unbind();\r\n  });\r\n  /**\r\n   * Stop autoplaying:\r\n   * - before each run, to restart autoplaying\r\n   * - on pausing via API\r\n   * - on destroying, to clear defined interval\r\n   * - while starting a swipe\r\n   * - on updating via API to reset interval that may changed\r\n   */\r\n\r\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\r\n    Autoplay.stop();\r\n  });\r\n  Events.on(['pause', 'destroy'], function () {\r\n    Autoplay.disable();\r\n    Autoplay.stop();\r\n  });\r\n  /**\r\n   * Start autoplaying:\r\n   * - after each run, to restart autoplaying\r\n   * - on playing via API\r\n   * - while ending a swipe\r\n   */\r\n\r\n  Events.on(['run.after', 'swipe.end'], function () {\r\n    Autoplay.start();\r\n  });\r\n  /**\r\n   * Start autoplaying:\r\n   * - after each run, to restart autoplaying\r\n   * - on playing via API\r\n   * - while ending a swipe\r\n   */\r\n\r\n  Events.on(['play'], function () {\r\n    Autoplay.enable();\r\n    Autoplay.start();\r\n  });\r\n  /**\r\n   * Remount autoplaying:\r\n   * - on updating via API to reset interval that may changed\r\n   */\r\n\r\n  Events.on('update', function () {\r\n    Autoplay.mount();\r\n  });\r\n  /**\r\n   * Destroy a binder:\r\n   * - on destroying glide instance to clearup listeners\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Binder.destroy();\r\n  });\r\n  return Autoplay;\r\n}\r\n\r\n/**\r\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\r\n *\r\n * @param {Object} points\r\n * @returns {Object}\r\n */\r\n\r\nfunction sortBreakpoints(points) {\r\n  if (isObject(points)) {\r\n    return sortKeys(points);\r\n  } else {\r\n    warn(\"Breakpoints option must be an object\");\r\n  }\r\n\r\n  return {};\r\n}\r\n\r\nfunction Breakpoints (Glide, Components, Events) {\r\n  /**\r\n   * Instance of the binder for DOM Events.\r\n   *\r\n   * @type {EventsBinder}\r\n   */\r\n  var Binder = new EventsBinder();\r\n  /**\r\n   * Holds reference to settings.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var settings = Glide.settings;\r\n  /**\r\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\r\n   * from smaller to larger. It is required in order to proper\r\n   * matching currently active breakpoint settings.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var points = sortBreakpoints(settings.breakpoints);\r\n  /**\r\n   * Cache initial settings before overwritting.\r\n   *\r\n   * @type {Object}\r\n   */\r\n\r\n  var defaults = Object.assign({}, settings);\r\n  var Breakpoints = {\r\n    /**\r\n     * Matches settings for currectly matching media breakpoint.\r\n     *\r\n     * @param {Object} points\r\n     * @returns {Object}\r\n     */\r\n    match: function match(points) {\r\n      if (typeof window.matchMedia !== 'undefined') {\r\n        for (var point in points) {\r\n          if (points.hasOwnProperty(point)) {\r\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\r\n              return points[point];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return defaults;\r\n    }\r\n  };\r\n  /**\r\n   * Overwrite instance settings with currently matching breakpoint settings.\r\n   * This happens right after component initialization.\r\n   */\r\n\r\n  Object.assign(settings, Breakpoints.match(points));\r\n  /**\r\n   * Update glide with settings of matched brekpoint:\r\n   * - window resize to update slider\r\n   */\r\n\r\n  Binder.on('resize', window, throttle(function () {\r\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\r\n  }, Glide.settings.throttle));\r\n  /**\r\n   * Resort and update default settings:\r\n   * - on reinit via API, so breakpoint matching will be performed with options\r\n   */\r\n\r\n  Events.on('update', function () {\r\n    points = sortBreakpoints(points);\r\n    defaults = Object.assign({}, settings);\r\n  });\r\n  /**\r\n   * Unbind resize listener:\r\n   * - on destroying, to bring markup to its initial state\r\n   */\r\n\r\n  Events.on('destroy', function () {\r\n    Binder.off('resize', window);\r\n  });\r\n  return Breakpoints;\r\n}\r\n\r\nvar COMPONENTS = {\r\n  // Required\r\n  Html: Html,\r\n  Translate: Translate,\r\n  Transition: Transition,\r\n  Direction: Direction,\r\n  Peek: Peek,\r\n  Sizes: Sizes,\r\n  Gaps: Gaps,\r\n  Move: Move,\r\n  Clones: Clones,\r\n  Resize: Resize,\r\n  Build: Build,\r\n  Run: Run,\r\n  // Optional\r\n  Swipe: Swipe,\r\n  Images: Images,\r\n  Anchors: Anchors,\r\n  Controls: Controls,\r\n  Keyboard: Keyboard,\r\n  Autoplay: Autoplay,\r\n  Breakpoints: Breakpoints\r\n};\r\n\r\nvar Glide = /*#__PURE__*/function (_Core) {\r\n  _inherits(Glide, _Core);\r\n\r\n  var _super = _createSuper(Glide);\r\n\r\n  function Glide() {\r\n    _classCallCheck(this, Glide);\r\n\r\n    return _super.apply(this, arguments);\r\n  }\r\n\r\n  _createClass(Glide, [{\r\n    key: \"mount\",\r\n    value: function mount() {\r\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\r\n    }\r\n  }]);\r\n\r\n  return Glide;\r\n}(Glide$1);\r\n\r\nexport { Glide as default };\r\n","import \"../css/style.scss\"\r\n\r\n// Our modules / classes\r\nimport MobileMenu from \"./modules/MobileMenu\"\r\nimport HeroSlider from \"./modules/HeroSlider\"\r\nimport GoogleMap from \"./modules/GoogleMap\"\r\n\r\n// Instantiate a new object using our modules/classes\r\nconst mobileMenu = new MobileMenu()\r\nconst heroSlider = new HeroSlider()\r\nconst googleMap = new GoogleMap()\r\n","class GMap {\r\n  constructor() {\r\n    document.querySelectorAll(\".acf-map\").forEach(el => {\r\n      this.new_map(el)\r\n    })\r\n  }\r\n\r\n  new_map($el) {\r\n    var $markers = $el.querySelectorAll(\".marker\")\r\n\r\n    var args = {\r\n      zoom: 16,\r\n      center: new google.maps.LatLng(0, 0),\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    }\r\n\r\n    var map = new google.maps.Map($el, args)\r\n    map.markers = []\r\n    var that = this\r\n\r\n    // add markers\r\n    $markers.forEach(function (x) {\r\n      that.add_marker(x, map)\r\n    })\r\n\r\n    // center map\r\n    this.center_map(map)\r\n  } // end new_map\r\n\r\n  add_marker($marker, map) {\r\n    var latlng = new google.maps.LatLng($marker.getAttribute(\"data-lat\"), $marker.getAttribute(\"data-lng\"))\r\n\r\n    var marker = new google.maps.Marker({\r\n      position: latlng,\r\n      map: map\r\n    })\r\n\r\n    map.markers.push(marker)\r\n\r\n    // if marker contains HTML, add it to an infoWindow\r\n    if ($marker.innerHTML) {\r\n      // create info window\r\n      var infowindow = new google.maps.InfoWindow({\r\n        content: $marker.innerHTML\r\n      })\r\n\r\n      // show info window when marker is clicked\r\n      google.maps.event.addListener(marker, \"click\", function () {\r\n        infowindow.open(map, marker)\r\n      })\r\n    }\r\n  } // end add_marker\r\n\r\n  center_map(map) {\r\n    var bounds = new google.maps.LatLngBounds()\r\n\r\n    // loop through all markers and create bounds\r\n    map.markers.forEach(function (marker) {\r\n      var latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng())\r\n\r\n      bounds.extend(latlng)\r\n    })\r\n\r\n    // only 1 marker?\r\n    if (map.markers.length == 1) {\r\n      // set center of map\r\n      map.setCenter(bounds.getCenter())\r\n      map.setZoom(16)\r\n    } else {\r\n      // fit to bounds\r\n      map.fitBounds(bounds)\r\n    }\r\n  } // end center_map\r\n}\r\n\r\nexport default GMap\r\n","import Glide from \"@glidejs/glide\"\r\n\r\nclass HeroSlider {\r\n  constructor() {\r\n    if (document.querySelector(\".hero-slider\")) {\r\n      // count how many slides there are\r\n      const dotCount = document.querySelectorAll(\".hero-slider__slide\").length\r\n\r\n      // Generate the HTML for the navigation dots\r\n      let dotHTML = \"\"\r\n      for (let i = 0; i < dotCount; i++) {\r\n        dotHTML += `<button class=\"slider__bullet glide__bullet\" data-glide-dir=\"=${i}\"></button>`\r\n      }\r\n\r\n      // Add the dots HTML to the DOM\r\n      document.querySelector(\".glide__bullets\").insertAdjacentHTML(\"beforeend\", dotHTML)\r\n\r\n      // Actually initialize the glide / slider script\r\n      var glide = new Glide(\".hero-slider\", {\r\n        type: \"carousel\",\r\n        perView: 1,\r\n        autoplay: 3000\r\n      })\r\n\r\n      glide.mount()\r\n    }\r\n  }\r\n}\r\n\r\nexport default HeroSlider\r\n","class MobileMenu {\r\n  constructor() {\r\n    this.menu = document.querySelector(\".site-header__menu\")\r\n    this.openButton = document.querySelector(\".site-header__menu-trigger\")\r\n    this.events()\r\n  }\r\n\r\n  events() {\r\n    this.openButton.addEventListener(\"click\", () => this.openMenu())\r\n  }\r\n\r\n  openMenu() {\r\n    this.openButton.classList.toggle(\"fa-bars\")\r\n    this.openButton.classList.toggle(\"fa-window-close\")\r\n    this.menu.classList.toggle(\"site-header__menu--active\")\r\n  }\r\n}\r\n\r\nexport default MobileMenu\r\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfictional_university_theme\"] = self[\"webpackChunkfictional_university_theme\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], function() { return __webpack_require__(\"./src/index.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["MobileMenu","HeroSlider","GoogleMap","mobileMenu","heroSlider","googleMap","GMap","constructor","document","querySelectorAll","forEach","el","new_map","$el","$markers","args","zoom","center","google","maps","LatLng","mapTypeId","MapTypeId","ROADMAP","map","Map","markers","that","x","add_marker","center_map","$marker","latlng","getAttribute","marker","Marker","position","push","innerHTML","infowindow","InfoWindow","content","event","addListener","open","bounds","LatLngBounds","lat","lng","extend","length","setCenter","getCenter","setZoom","fitBounds","Glide","querySelector","dotCount","dotHTML","i","insertAdjacentHTML","glide","type","perView","autoplay","mount","menu","openButton","events","addEventListener","openMenu","classList","toggle"],"sourceRoot":""}